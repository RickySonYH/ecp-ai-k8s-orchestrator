{"success":true,"tenant_id":"test-tenant-001","preset":"small","manifests":{"01-namespace.yaml":"---\napiVersion: v1\nkind: Namespace\nmetadata:\n  name: test-tenant-001-ecp-ai\n  labels:\n    tenant: test-tenant-001\n    app.kubernetes.io/name: ecp-ai\n    app.kubernetes.io/managed-by: ecp-orchestrator\n    tier: small\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/preset: small\n  annotations:\n    ecp.ai/created-by: ecp-orchestrator\n    ecp.ai/description: \"ECP-AI tenant namespace for test-tenant-001\"","02-configmap.yaml":"---\napiVersion: v1\nkind: ConfigMap\nmetadata:\n  name: ecp-config\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\ndata:\n  tenant-config.yaml: |\n    tenantId: test-tenant-001\n    preset: small\n    services:\n      callbot:\n        enabled: true\n        count: 1\n      chatbot:\n        enabled: true\n        count: 1\n      advisor:\n        enabled: true\n        count: 1\n      stt:\n        enabled: true\n        count: 1\n      tts:\n        enabled: true\n        count: 1\n      ta:\n        enabled: true\n        count: 1\n      qa:\n        enabled: true\n        count: 1\n    resources:\n      gpu_type: t4\n      gpu_count: 3\n      cpu_cores: 30\n    sla:\n      availability: 99.9\n      response_time: 300","03-tts-server-deployment.yaml":"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: tts-server\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: tts-server\n    tenant: test-tenant-001\n    tier: gpu\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: tts-server\n      tenant: test-tenant-001\n  template:\n    metadata:\n      labels:\n        app: tts-server\n        tenant: test-tenant-001\n        tier: gpu\n        monitoring: enabled\n    spec:\n      nodeSelector:\n        accelerator: nvidia-t4\n      tolerations:\n      - key: nvidia.com/gpu\n        operator: Equal\n        value: present\n        effect: NoSchedule\n      containers:\n      - name: tts-server\n        image: ecp-ai/tts-server:latest\n        ports:\n        - containerPort: 8080\n        env:\n        - name: TENANT_ID\n          value: test-tenant-001\n        - name: SERVICE_NAME\n          value: tts-server\n        - name: GPU_TYPE\n          value: t4\n        resources:\n          requests:\n            nvidia.com/gpu: 1\n            cpu: 2000m\n            memory: 4Gi\n          limits:\n            nvidia.com/gpu: 1\n            cpu: 4000m\n            memory: 8Gi\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n          initialDelaySeconds: 60\n          periodSeconds: 30\n        readinessProbe:\n          httpGet:\n            path: /ready\n            port: 8080\n          initialDelaySeconds: 30\n          periodSeconds: 10\n","03-tts-server-service.yaml":"---\napiVersion: v1\nkind: Service\nmetadata:\n  name: tts-server-service\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: tts-server\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: tts-server\n    monitoring: enabled\nspec:\n  selector:\n    app: tts-server\n    tenant: test-tenant-001\n  ports:\n  \n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n    protocol: TCP\n  \n  type: ClusterIP","03-tts-server-hpa.yaml":"---\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: tts-server-hpa\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: tts-server\n    tenant: test-tenant-001\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: tts-server\n  minReplicas: 1\n  maxReplicas: 3  # GPU 서비스는 제한적 스케일링\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 80  # GPU 서비스는 높은 임계값\n  behavior:\n    scaleUp:\n      stabilizationWindowSeconds: 300  # 더 긴 안정화 시간\n      policies:\n      - type: Percent\n        value: 50\n        periodSeconds: 300\n    scaleDown:\n      stabilizationWindowSeconds: 600\n      policies:\n      - type: Percent\n        value: 25\n        periodSeconds: 300\n","04-nlp-server-deployment.yaml":"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nlp-server\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: nlp-server\n    tenant: test-tenant-001\n    tier: gpu\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: nlp-server\n      tenant: test-tenant-001\n  template:\n    metadata:\n      labels:\n        app: nlp-server\n        tenant: test-tenant-001\n        tier: gpu\n        monitoring: enabled\n    spec:\n      nodeSelector:\n        accelerator: nvidia-t4\n      tolerations:\n      - key: nvidia.com/gpu\n        operator: Equal\n        value: present\n        effect: NoSchedule\n      containers:\n      - name: nlp-server\n        image: ecp-ai/nlp-server:latest\n        ports:\n        - containerPort: 8080\n        env:\n        - name: TENANT_ID\n          value: test-tenant-001\n        - name: SERVICE_NAME\n          value: nlp-server\n        - name: GPU_TYPE\n          value: t4\n        resources:\n          requests:\n            nvidia.com/gpu: 1\n            cpu: 4000m\n            memory: 8Gi\n          limits:\n            nvidia.com/gpu: 1\n            cpu: 8000m\n            memory: 16Gi\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n          initialDelaySeconds: 60\n          periodSeconds: 30\n        readinessProbe:\n          httpGet:\n            path: /ready\n            port: 8080\n          initialDelaySeconds: 30\n          periodSeconds: 10\n","04-nlp-server-service.yaml":"---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nlp-server-service\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: nlp-server\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: nlp-server\n    monitoring: enabled\nspec:\n  selector:\n    app: nlp-server\n    tenant: test-tenant-001\n  ports:\n  \n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n    protocol: TCP\n  \n  type: ClusterIP","04-nlp-server-hpa.yaml":"---\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: nlp-server-hpa\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: nlp-server\n    tenant: test-tenant-001\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: nlp-server\n  minReplicas: 1\n  maxReplicas: 3  # GPU 서비스는 제한적 스케일링\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 80  # GPU 서비스는 높은 임계값\n  behavior:\n    scaleUp:\n      stabilizationWindowSeconds: 300  # 더 긴 안정화 시간\n      policies:\n      - type: Percent\n        value: 50\n        periodSeconds: 300\n    scaleDown:\n      stabilizationWindowSeconds: 600\n      policies:\n      - type: Percent\n        value: 25\n        periodSeconds: 300\n","05-aicm-server-deployment.yaml":"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: aicm-server\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: aicm-server\n    tenant: test-tenant-001\n    tier: gpu\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: aicm-server\n      tenant: test-tenant-001\n  template:\n    metadata:\n      labels:\n        app: aicm-server\n        tenant: test-tenant-001\n        tier: gpu\n        monitoring: enabled\n    spec:\n      nodeSelector:\n        accelerator: nvidia-t4\n      tolerations:\n      - key: nvidia.com/gpu\n        operator: Equal\n        value: present\n        effect: NoSchedule\n      containers:\n      - name: aicm-server\n        image: ecp-ai/aicm-server:latest\n        ports:\n        - containerPort: 8080\n        env:\n        - name: TENANT_ID\n          value: test-tenant-001\n        - name: SERVICE_NAME\n          value: aicm-server\n        - name: GPU_TYPE\n          value: t4\n        resources:\n          requests:\n            nvidia.com/gpu: 1\n            cpu: 2000m\n            memory: 6Gi\n          limits:\n            nvidia.com/gpu: 1\n            cpu: 4000m\n            memory: 12Gi\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n          initialDelaySeconds: 60\n          periodSeconds: 30\n        readinessProbe:\n          httpGet:\n            path: /ready\n            port: 8080\n          initialDelaySeconds: 30\n          periodSeconds: 10\n","05-aicm-server-service.yaml":"---\napiVersion: v1\nkind: Service\nmetadata:\n  name: aicm-server-service\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: aicm-server\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: aicm-server\n    monitoring: enabled\nspec:\n  selector:\n    app: aicm-server\n    tenant: test-tenant-001\n  ports:\n  \n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n    protocol: TCP\n  \n  type: ClusterIP","05-aicm-server-hpa.yaml":"---\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: aicm-server-hpa\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: aicm-server\n    tenant: test-tenant-001\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: aicm-server\n  minReplicas: 1\n  maxReplicas: 3  # GPU 서비스는 제한적 스케일링\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 80  # GPU 서비스는 높은 임계값\n  behavior:\n    scaleUp:\n      stabilizationWindowSeconds: 300  # 더 긴 안정화 시간\n      policies:\n      - type: Percent\n        value: 50\n        periodSeconds: 300\n    scaleDown:\n      stabilizationWindowSeconds: 600\n      policies:\n      - type: Percent\n        value: 25\n        periodSeconds: 300\n","06-stt-server-deployment.yaml":"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: stt-server\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: stt-server\n    tenant: test-tenant-001\n    tier: cpu\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: stt-server\n      tenant: test-tenant-001\n  template:\n    metadata:\n      labels:\n        app: stt-server\n        tenant: test-tenant-001\n        tier: cpu\n        monitoring: enabled\n    spec:\n      containers:\n      - name: stt-server\n        image: ecp-ai/stt-server:latest\n        ports:\n        - containerPort: 8080\n        env:\n        - name: TENANT_ID\n          value: test-tenant-001\n        - name: SERVICE_NAME\n          value: stt-server\n        resources:\n          requests:\n            cpu: 4000m\n            memory: 8Gi\n          limits:\n            cpu: 8000m\n            memory: 16Gi\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n          initialDelaySeconds: 30\n          periodSeconds: 10\n        readinessProbe:\n          httpGet:\n            path: /ready\n            port: 8080\n          initialDelaySeconds: 10\n          periodSeconds: 5\n","06-stt-server-service.yaml":"---\napiVersion: v1\nkind: Service\nmetadata:\n  name: stt-server-service\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: stt-server\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: stt-server\n    monitoring: enabled\nspec:\n  selector:\n    app: stt-server\n    tenant: test-tenant-001\n  ports:\n  \n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n    protocol: TCP\n  \n  type: ClusterIP","06-stt-server-hpa.yaml":"---\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: stt-server-hpa\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: stt-server\n    tenant: test-tenant-001\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: stt-server\n  minReplicas: 1\n  maxReplicas: 10\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 70\n  - type: Resource\n    resource:\n      name: memory\n      target:\n        type: Utilization\n        averageUtilization: 80\n  \n  behavior:\n    scaleUp:\n      stabilizationWindowSeconds: 60\n      policies:\n      - type: Percent\n        value: 100\n        periodSeconds: 60\n    scaleDown:\n      stabilizationWindowSeconds: 300\n      policies:\n      - type: Percent\n        value: 10\n        periodSeconds: 60","07-ta-server-deployment.yaml":"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: ta-server\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: ta-server\n    tenant: test-tenant-001\n    tier: cpu\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: ta-server\n      tenant: test-tenant-001\n  template:\n    metadata:\n      labels:\n        app: ta-server\n        tenant: test-tenant-001\n        tier: cpu\n        monitoring: enabled\n    spec:\n      containers:\n      - name: ta-server\n        image: ecp-ai/ta-server:latest\n        ports:\n        - containerPort: 8080\n        env:\n        - name: TENANT_ID\n          value: test-tenant-001\n        - name: SERVICE_NAME\n          value: ta-server\n        resources:\n          requests:\n            cpu: 2000m\n            memory: 4Gi\n          limits:\n            cpu: 4000m\n            memory: 8Gi\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n          initialDelaySeconds: 30\n          periodSeconds: 10\n        readinessProbe:\n          httpGet:\n            path: /ready\n            port: 8080\n          initialDelaySeconds: 10\n          periodSeconds: 5\n","07-ta-server-service.yaml":"---\napiVersion: v1\nkind: Service\nmetadata:\n  name: ta-server-service\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: ta-server\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: ta-server\n    monitoring: enabled\nspec:\n  selector:\n    app: ta-server\n    tenant: test-tenant-001\n  ports:\n  \n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n    protocol: TCP\n  \n  type: ClusterIP","07-ta-server-hpa.yaml":"---\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: ta-server-hpa\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: ta-server\n    tenant: test-tenant-001\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: ta-server\n  minReplicas: 1\n  maxReplicas: 10\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 70\n  - type: Resource\n    resource:\n      name: memory\n      target:\n        type: Utilization\n        averageUtilization: 80\n  \n  behavior:\n    scaleUp:\n      stabilizationWindowSeconds: 60\n      policies:\n      - type: Percent\n        value: 100\n        periodSeconds: 60\n    scaleDown:\n      stabilizationWindowSeconds: 300\n      policies:\n      - type: Percent\n        value: 10\n        periodSeconds: 60","08-qa-server-deployment.yaml":"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: qa-server\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: qa-server\n    tenant: test-tenant-001\n    tier: cpu\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: qa-server\n      tenant: test-tenant-001\n  template:\n    metadata:\n      labels:\n        app: qa-server\n        tenant: test-tenant-001\n        tier: cpu\n        monitoring: enabled\n    spec:\n      containers:\n      - name: qa-server\n        image: ecp-ai/qa-server:latest\n        ports:\n        - containerPort: 8080\n        env:\n        - name: TENANT_ID\n          value: test-tenant-001\n        - name: SERVICE_NAME\n          value: qa-server\n        resources:\n          requests:\n            cpu: 1000m\n            memory: 2Gi\n          limits:\n            cpu: 2000m\n            memory: 4Gi\n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n          initialDelaySeconds: 30\n          periodSeconds: 10\n        readinessProbe:\n          httpGet:\n            path: /ready\n            port: 8080\n          initialDelaySeconds: 10\n          periodSeconds: 5\n","08-qa-server-service.yaml":"---\napiVersion: v1\nkind: Service\nmetadata:\n  name: qa-server-service\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: qa-server\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: qa-server\n    monitoring: enabled\nspec:\n  selector:\n    app: qa-server\n    tenant: test-tenant-001\n  ports:\n  \n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n    protocol: TCP\n  \n  type: ClusterIP","08-qa-server-hpa.yaml":"---\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: qa-server-hpa\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: qa-server\n    tenant: test-tenant-001\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: qa-server\n  minReplicas: 1\n  maxReplicas: 10\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 70\n  - type: Resource\n    resource:\n      name: memory\n      target:\n        type: Utilization\n        averageUtilization: 80\n  \n  behavior:\n    scaleUp:\n      stabilizationWindowSeconds: 60\n      policies:\n      - type: Percent\n        value: 100\n        periodSeconds: 60\n    scaleDown:\n      stabilizationWindowSeconds: 300\n      policies:\n      - type: Percent\n        value: 10\n        periodSeconds: 60","09-callbot-deployment.yaml":"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: callbot\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: callbot\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: callbot\nspec:\n  replicas: 1\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n  selector:\n    matchLabels:\n      app: callbot\n      tenant: test-tenant-001\n  template:\n    metadata:\n      labels:\n        app: callbot\n        tenant: test-tenant-001\n        ecp.ai/tenant-id: test-tenant-001\n        ecp.ai/service: callbot\n        monitoring: enabled\n    spec:\n      \n      \n      containers:\n      - name: callbot\n        image: ecp-ai/callbot:latest\n        ports:\n        \n        - containerPort: 8080\n          protocol: TCP\n        \n        env:\n        - name: TENANT_ID\n          value: test-tenant-001\n        - name: SERVICE_NAME\n          value: callbot\n        \n        \n        resources:\n          requests:\n            \n            cpu: 100m\n            memory: 256Mi\n            \n          limits:\n            \n            cpu: 1000m\n            memory: 1Gi\n            \n        \n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          httpGet:\n            path: /ready\n            port: 8080\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 3\n          successThreshold: 1","09-callbot-service.yaml":"---\napiVersion: v1\nkind: Service\nmetadata:\n  name: callbot-service\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: callbot\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: callbot\n    monitoring: enabled\nspec:\n  selector:\n    app: callbot\n    tenant: test-tenant-001\n  ports:\n  \n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n    protocol: TCP\n  \n  type: ClusterIP","09-callbot-hpa.yaml":"---\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: callbot-hpa\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: callbot\n    tenant: test-tenant-001\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: callbot\n  minReplicas: 1\n  maxReplicas: 10\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 70\n  - type: Resource\n    resource:\n      name: memory\n      target:\n        type: Utilization\n        averageUtilization: 80\n  \n  behavior:\n    scaleUp:\n      stabilizationWindowSeconds: 60\n      policies:\n      - type: Percent\n        value: 100\n        periodSeconds: 60\n    scaleDown:\n      stabilizationWindowSeconds: 300\n      policies:\n      - type: Percent\n        value: 10\n        periodSeconds: 60","10-chatbot-deployment.yaml":"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: chatbot\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: chatbot\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: chatbot\nspec:\n  replicas: 1\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n  selector:\n    matchLabels:\n      app: chatbot\n      tenant: test-tenant-001\n  template:\n    metadata:\n      labels:\n        app: chatbot\n        tenant: test-tenant-001\n        ecp.ai/tenant-id: test-tenant-001\n        ecp.ai/service: chatbot\n        monitoring: enabled\n    spec:\n      \n      \n      containers:\n      - name: chatbot\n        image: ecp-ai/chatbot:latest\n        ports:\n        \n        - containerPort: 8080\n          protocol: TCP\n        \n        env:\n        - name: TENANT_ID\n          value: test-tenant-001\n        - name: SERVICE_NAME\n          value: chatbot\n        \n        \n        resources:\n          requests:\n            \n            cpu: 100m\n            memory: 256Mi\n            \n          limits:\n            \n            cpu: 1000m\n            memory: 1Gi\n            \n        \n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          httpGet:\n            path: /ready\n            port: 8080\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 3\n          successThreshold: 1","10-chatbot-service.yaml":"---\napiVersion: v1\nkind: Service\nmetadata:\n  name: chatbot-service\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: chatbot\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: chatbot\n    monitoring: enabled\nspec:\n  selector:\n    app: chatbot\n    tenant: test-tenant-001\n  ports:\n  \n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n    protocol: TCP\n  \n  type: ClusterIP","10-chatbot-hpa.yaml":"---\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: chatbot-hpa\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: chatbot\n    tenant: test-tenant-001\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: chatbot\n  minReplicas: 1\n  maxReplicas: 10\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 70\n  - type: Resource\n    resource:\n      name: memory\n      target:\n        type: Utilization\n        averageUtilization: 80\n  \n  behavior:\n    scaleUp:\n      stabilizationWindowSeconds: 60\n      policies:\n      - type: Percent\n        value: 100\n        periodSeconds: 60\n    scaleDown:\n      stabilizationWindowSeconds: 300\n      policies:\n      - type: Percent\n        value: 10\n        periodSeconds: 60","11-advisor-deployment.yaml":"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: advisor\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: advisor\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: advisor\nspec:\n  replicas: 1\n  strategy:\n    type: RollingUpdate\n    rollingUpdate:\n      maxSurge: 25%\n      maxUnavailable: 25%\n  selector:\n    matchLabels:\n      app: advisor\n      tenant: test-tenant-001\n  template:\n    metadata:\n      labels:\n        app: advisor\n        tenant: test-tenant-001\n        ecp.ai/tenant-id: test-tenant-001\n        ecp.ai/service: advisor\n        monitoring: enabled\n    spec:\n      \n      \n      containers:\n      - name: advisor\n        image: ecp-ai/advisor:latest\n        ports:\n        \n        - containerPort: 8080\n          protocol: TCP\n        \n        env:\n        - name: TENANT_ID\n          value: test-tenant-001\n        - name: SERVICE_NAME\n          value: advisor\n        \n        \n        resources:\n          requests:\n            \n            cpu: 100m\n            memory: 256Mi\n            \n          limits:\n            \n            cpu: 1000m\n            memory: 1Gi\n            \n        \n        livenessProbe:\n          httpGet:\n            path: /health\n            port: 8080\n          initialDelaySeconds: 30\n          periodSeconds: 10\n          timeoutSeconds: 5\n          failureThreshold: 3\n        readinessProbe:\n          httpGet:\n            path: /ready\n            port: 8080\n          initialDelaySeconds: 5\n          periodSeconds: 5\n          timeoutSeconds: 3\n          failureThreshold: 3\n          successThreshold: 1","11-advisor-service.yaml":"---\napiVersion: v1\nkind: Service\nmetadata:\n  name: advisor-service\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: advisor\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: advisor\n    monitoring: enabled\nspec:\n  selector:\n    app: advisor\n    tenant: test-tenant-001\n  ports:\n  \n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n    protocol: TCP\n  \n  type: ClusterIP","11-advisor-hpa.yaml":"---\napiVersion: autoscaling/v2\nkind: HorizontalPodAutoscaler\nmetadata:\n  name: advisor-hpa\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: advisor\n    tenant: test-tenant-001\nspec:\n  scaleTargetRef:\n    apiVersion: apps/v1\n    kind: Deployment\n    name: advisor\n  minReplicas: 1\n  maxReplicas: 10\n  metrics:\n  - type: Resource\n    resource:\n      name: cpu\n      target:\n        type: Utilization\n        averageUtilization: 70\n  - type: Resource\n    resource:\n      name: memory\n      target:\n        type: Utilization\n        averageUtilization: 80\n  \n  behavior:\n    scaleUp:\n      stabilizationWindowSeconds: 60\n      policies:\n      - type: Percent\n        value: 100\n        periodSeconds: 60\n    scaleDown:\n      stabilizationWindowSeconds: 300\n      policies:\n      - type: Percent\n        value: 10\n        periodSeconds: 60","12-nginx-deployment.yaml":"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: nginx\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: nginx\n    tenant: test-tenant-001\n    tier: infrastructure\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: nginx\n      tenant: test-tenant-001\n  template:\n    metadata:\n      labels:\n        app: nginx\n        tenant: test-tenant-001\n        tier: infrastructure\n        monitoring: enabled\n    spec:\n      containers:\n      - name: nginx\n        image: nginx:1.21-alpine\n        ports:\n        - containerPort: 80\n        env:\n        - name: TENANT_ID\n          value: test-tenant-001\n        resources:\n          requests:\n            cpu: 500m\n            memory: 1Gi\n          limits:\n            cpu: 1000m\n            memory: 2Gi\n        livenessProbe:\n          tcpSocket:\n            port: 80\n          initialDelaySeconds: 30\n          periodSeconds: 10\n        readinessProbe:\n          tcpSocket:\n            port: 80\n          initialDelaySeconds: 10\n          periodSeconds: 5\n","12-nginx-service.yaml":"---\napiVersion: v1\nkind: Service\nmetadata:\n  name: nginx-service\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: nginx\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: nginx\n    monitoring: enabled\nspec:\n  selector:\n    app: nginx\n    tenant: test-tenant-001\n  ports:\n  \n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n    protocol: TCP\n  \n  type: ClusterIP","13-api-gateway-deployment.yaml":"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: api-gateway\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: api-gateway\n    tenant: test-tenant-001\n    tier: infrastructure\nspec:\n  replicas: 2\n  selector:\n    matchLabels:\n      app: api-gateway\n      tenant: test-tenant-001\n  template:\n    metadata:\n      labels:\n        app: api-gateway\n        tenant: test-tenant-001\n        tier: infrastructure\n        monitoring: enabled\n    spec:\n      containers:\n      - name: api-gateway\n        image: ecp-ai/api-gateway:latest\n        ports:\n        - containerPort: 8080\n        env:\n        - name: TENANT_ID\n          value: test-tenant-001\n        resources:\n          requests:\n            cpu: 1000m\n            memory: 2Gi\n          limits:\n            cpu: 2000m\n            memory: 4Gi\n        livenessProbe:\n          tcpSocket:\n            port: 8080\n          initialDelaySeconds: 30\n          periodSeconds: 10\n        readinessProbe:\n          tcpSocket:\n            port: 8080\n          initialDelaySeconds: 10\n          periodSeconds: 5\n","13-api-gateway-service.yaml":"---\napiVersion: v1\nkind: Service\nmetadata:\n  name: api-gateway-service\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: api-gateway\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: api-gateway\n    monitoring: enabled\nspec:\n  selector:\n    app: api-gateway\n    tenant: test-tenant-001\n  ports:\n  \n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n    protocol: TCP\n  \n  type: ClusterIP","14-postgresql-deployment.yaml":"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: postgresql\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: postgresql\n    tenant: test-tenant-001\n    tier: infrastructure\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: postgresql\n      tenant: test-tenant-001\n  template:\n    metadata:\n      labels:\n        app: postgresql\n        tenant: test-tenant-001\n        tier: infrastructure\n        monitoring: enabled\n    spec:\n      containers:\n      - name: postgresql\n        image: postgres:13-alpine\n        ports:\n        - containerPort: 5432\n        env:\n        - name: TENANT_ID\n          value: test-tenant-001\n        - name: POSTGRES_DB\n          value: test-tenant-001_db\n        - name: POSTGRES_USER\n          value: ecp_user\n        - name: POSTGRES_PASSWORD\n          value: ecp_password\n        resources:\n          requests:\n            cpu: 2000m\n            memory: 4Gi\n          limits:\n            cpu: 4000m\n            memory: 8Gi\n        livenessProbe:\n          tcpSocket:\n            port: 5432\n          initialDelaySeconds: 30\n          periodSeconds: 10\n        readinessProbe:\n          tcpSocket:\n            port: 5432\n          initialDelaySeconds: 10\n          periodSeconds: 5\n","14-postgresql-service.yaml":"---\napiVersion: v1\nkind: Service\nmetadata:\n  name: postgresql-service\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: postgresql\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: postgresql\n    monitoring: enabled\nspec:\n  selector:\n    app: postgresql\n    tenant: test-tenant-001\n  ports:\n  \n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n    protocol: TCP\n  \n  type: ClusterIP","15-auth-service-deployment.yaml":"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: auth-service\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: auth-service\n    tenant: test-tenant-001\n    tier: infrastructure\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: auth-service\n      tenant: test-tenant-001\n  template:\n    metadata:\n      labels:\n        app: auth-service\n        tenant: test-tenant-001\n        tier: infrastructure\n        monitoring: enabled\n    spec:\n      containers:\n      - name: auth-service\n        image: ecp-ai/auth-service:latest\n        ports:\n        - containerPort: 8080\n        env:\n        - name: TENANT_ID\n          value: test-tenant-001\n        - name: JWT_SECRET\n          value: ecp-jwt-secret-test-tenant-001\n        - name: DB_HOST\n          value: postgresql-service\n        resources:\n          requests:\n            cpu: 500m\n            memory: 1Gi\n          limits:\n            cpu: 1000m\n            memory: 2Gi\n        livenessProbe:\n          tcpSocket:\n            port: 8080\n          initialDelaySeconds: 30\n          periodSeconds: 10\n        readinessProbe:\n          tcpSocket:\n            port: 8080\n          initialDelaySeconds: 10\n          periodSeconds: 5\n","15-auth-service-service.yaml":"---\napiVersion: v1\nkind: Service\nmetadata:\n  name: auth-service-service\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: auth-service\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: auth-service\n    monitoring: enabled\nspec:\n  selector:\n    app: auth-service\n    tenant: test-tenant-001\n  ports:\n  \n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n    protocol: TCP\n  \n  type: ClusterIP","16-vectordb-deployment.yaml":"---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: vectordb\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: vectordb\n    tenant: test-tenant-001\n    tier: infrastructure\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      app: vectordb\n      tenant: test-tenant-001\n  template:\n    metadata:\n      labels:\n        app: vectordb\n        tenant: test-tenant-001\n        tier: infrastructure\n        monitoring: enabled\n    spec:\n      containers:\n      - name: vectordb\n        image: qdrant/qdrant:latest\n        ports:\n        - containerPort: 6333\n        env:\n        - name: TENANT_ID\n          value: test-tenant-001\n        resources:\n          requests:\n            cpu: 1000m\n            memory: 2Gi\n          limits:\n            cpu: 2000m\n            memory: 4Gi\n        livenessProbe:\n          tcpSocket:\n            port: 6333\n          initialDelaySeconds: 30\n          periodSeconds: 10\n        readinessProbe:\n          tcpSocket:\n            port: 6333\n          initialDelaySeconds: 10\n          periodSeconds: 5\n","16-vectordb-service.yaml":"---\napiVersion: v1\nkind: Service\nmetadata:\n  name: vectordb-service\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    app: vectordb\n    tenant: test-tenant-001\n    ecp.ai/tenant-id: test-tenant-001\n    ecp.ai/service: vectordb\n    monitoring: enabled\nspec:\n  selector:\n    app: vectordb\n    tenant: test-tenant-001\n  ports:\n  \n  - name: port-8080\n    port: 8080\n    targetPort: 8080\n    protocol: TCP\n  \n  type: ClusterIP","17-storage-pvc.yaml":"---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: ecp-storage-pvc\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    tenant: test-tenant-001\n    tier: storage\nspec:\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 350Gi\n  storageClassName: fast-ssd\n---\napiVersion: v1\nkind: PersistentVolumeClaim\nmetadata:\n  name: ecp-logs-pvc\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    tenant: test-tenant-001\n    tier: storage\nspec:\n  accessModes:\n    - ReadWriteMany\n  resources:\n    requests:\n      storage: 50Gi\n  storageClassName: standard\n","90-networkpolicy.yaml":"---\napiVersion: networking.k8s.io/v1\nkind: NetworkPolicy\nmetadata:\n  name: ecp-ai-network-policy\n  namespace: test-tenant-001-ecp-ai\n  labels:\n    tenant: test-tenant-001\nspec:\n  podSelector: {}\n  policyTypes:\n  - Ingress\n  - Egress\n  ingress:\n  - from:\n    - namespaceSelector:\n        matchLabels:\n          ecp.ai/tenant-id: test-tenant-001\n  - from:\n    - namespaceSelector:\n        matchLabels:\n          name: monitoring\n  - from:\n    - namespaceSelector:\n        matchLabels:\n          name: ingress-nginx\n    ports:\n    - protocol: TCP\n      port: 8080\n  egress:\n  - to:\n    - namespaceSelector:\n        matchLabels:\n          ecp.ai/tenant-id: test-tenant-001\n  - to: []\n    ports:\n    - protocol: TCP\n      port: 443\n    - protocol: TCP\n      port: 53\n    - protocol: UDP\n      port: 53","91-monitoring.yaml":"apiVersion: monitoring.coreos.com/v1\nkind: ServiceMonitor\nmetadata:\n  labels:\n    app.kubernetes.io/name: ecp-ai\n    tenant: test-tenant-001\n  name: ecp-ai-monitoring\n  namespace: test-tenant-001-ecp-ai\nspec:\n  endpoints:\n  - interval: 30s\n    path: /metrics\n    port: metrics\n  selector:\n    matchLabels:\n      monitoring: enabled\n"},"manifest_count":42,"estimated_resources":{"gpu_type":"t4","gpu_count":3,"cpu_cores":30}}